[General]

########################
## Network          ####
########################
include ../Parameters/Castalia.ini
sim-time-limit = 100s
seed-set = 42

#Radio range is 97.64237

SN.field_x = 400
SN.field_y = 400
SN.numNodes = 40
SN.deployment = "20x2"

#SN.node[0].xCoor = 0
#SN.node[0].yCoor = 0
#SN.node[1].xCoor = 50
#SN.node[1].yCoor = 0


########################
## Traces           ####
########################
SN.wirelessChannel.collectTraceInfo = false
SN.node[*].Communication.Radio.collectTraceInfo = false
SN.node[*].Communication.MAC.collectTraceInfo = false
SN.node[*].Communication.Routing.collectTraceInfo = false
SN.node[*].Application.collectTraceInfo = false
SN.node[*].SensorManager.collectTraceInfo = false
SN.node[*].ResourceManager.collectTraceInfo = false

########################
## MAC              ####
########################
#include ../Parameters/MAC/CSMA.ini
#include ../Parameters/MAC/CSMA15_4.ini
#include ../Parameters/MAC/802_15_4.ini
#SN.node[*].Communication.MACProtocolName = "TunableMAC"
#SN.node[*].Communication.MAC.dutyCycle = 0.01
#SN.node[*].Communication.MAC.randomTxOffset = 0
#SN.node[*].Communication.MAC.backoffType = 2

SN.node[*].Communication.MACProtocolName = "IEEE802154"

#SN.node[*].Communication.MACProtocolName = "Basic802154"
#SN.node[0].Communication.MAC.isFFD = true
#SN.node[0].Communication.MAC.isPANCoordinator = true
#SN.node[*].Communication.MAC.phyDataRate = 250       # as defined for CC2420: 250
#SN.node[*].Communication.MAC.phyBitsPerSymbol = 4    # as defined for CC2420: 4
#SN.node[*].Communication.MAC.beaconOrder = 11
#SN.node[*].Communication.MAC.frameOrder = 5

SN.node[*].Communication.MAC.macBufferSize = 2048

########################
## Application      ####
########################
SN.node[*].ApplicationName = "GeoSync"
SN.node[*].Application.startupDelay = 0s
SN.node[*].Application.packetTimeLimit = 0s
SN.node[*].Application.ptpPeriod = 0s
SN.node[*].Application.hecopsPeriod = 0s
SN.node[0].Application.dataPeriod = 0s
SN.node[19].Application.dataPeriod = 30s
SN.node[*].Application.dataPeriod = 0s
SN.node[0].Application.ptpMaster = true
SN.node[1..9999].Application.ptpMaster = false
SN.node[*].Application.dataPacketLimit = 1



########################
## Wireless Channel ####
########################
SN.wirelessChannel.onlyStaticNodes = true
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.pathLossExponent = 2.0	# Free Space

########################
## Radio           #####
########################
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
SN.node[*].Communication.Radio.symbolsForRSSI = 16
SN.node[*].Communication.Radio.TxOutputPower = "0dBm"
SN.node[*].Communication.Radio.bufferSize = 2048

########################
## Configs         #####
########################
[Config ALL]
SN.node[*].Communication.RoutingProtocolName = ${"BypassRouting","AodvRouting","AodvTestRouting","LabileRouting","RELRouting"}
#SN.node[*].Communication.Routing.activeRouteTimeout = 3600000
#SN.node[*].Communication.Routing.helloInterval = 1000
SN.node[*].Communication.Routing.rreqRatelimit = 1
SN.node[*].Communication.Routing.rerrRatelimit = 1
SN.node[*].Communication.Routing.hopCountThreshould = 20
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[0].Communication.Routing.isSink = true
SN.node[*].Communication.Routing.slotLength = 0.2
SN.node[*].Communication.Routing.roundLength = 20s
SN.node[*].Communication.Routing.percentage = 0.05
SN.node[*].Communication.Routing.powersConfig = xmldoc("powersConfig.xml")
output-scalar-file = ${resultdir}/ALL-${runnumber}.sca
output-vector-file = ${resultdir}/ALL-${runnumber}.vec


[Config TSTP]
SN.node[*].Communication.RoutingProtocolName = "TSTP"
SN.node[*].Communication.MACProtocolName = "TSTPMAC"
SN.node[*].Communication.MAC.dutyCycle = 0.01
SN.node[0].Communication.Routing.sink = true
SN.node[*].Communication.Routing.dropExpired = false
SN.node[*].Communication.Routing.radioRange = 7000cm
SN.node[*].Application.ptpPeriod = 0
SN.node[*].Application.hecopsPeriod = 0
SN.node[*].Application.ptpMaster = false



output-scalar-file = ${resultdir}/TSTP-${runnumber}.sca
output-vector-file = ${resultdir}/TSTP-${runnumber}.vec

[Config TSTPEFFORT]
SN.node[*].Communication.RoutingProtocolName = "TSTP"
SN.node[*].Communication.MACProtocolName = "TSTPMAC"
SN.node[*].Communication.Routing.useEffortMetric = true
SN.node[*].Communication.MAC.dutyCycle = ${0.01, 0.05, 0.2, 0.5}
SN.node[0].Communication.Routing.sink = true
SN.node[*].Application.ptpPeriod = 0
SN.node[*].Application.hecopsPeriod = 0
SN.node[*].Application.ptpMaster = false

SN.node[42].Communication.Routing.expiry = 1s
SN.node[34].Communication.Routing.expiry = 1s
SN.node[8].Communication.Routing.expiry = 1s
SN.node[14].Communication.Routing.expiry = 1s
SN.node[35].Communication.Routing.expiry = 10s
SN.node[28].Communication.Routing.expiry = 10s
SN.node[48].Communication.Routing.expiry = 10s
SN.node[4].Communication.Routing.expiry = 10s
SN.node[12].Communication.Routing.expiry = 10s
SN.node[32].Communication.Routing.expiry = 10s
SN.node[24].Communication.Routing.expiry = 10s
SN.node[1].Communication.Routing.expiry = 10s
SN.node[40].Communication.Routing.expiry = 10s
SN.node[46].Communication.Routing.expiry = 60s
SN.node[21].Communication.Routing.expiry = 60s
SN.node[16].Communication.Routing.expiry = 60s
SN.node[41].Communication.Routing.expiry = 60s
SN.node[37].Communication.Routing.expiry = 60s
SN.node[15].Communication.Routing.expiry = 60s
SN.node[2].Communication.Routing.expiry = 60s
SN.node[39].Communication.Routing.expiry = 60s
SN.node[13].Communication.Routing.expiry = 60s
SN.node[7].Communication.Routing.expiry = 300s
SN.node[45].Communication.Routing.expiry = 300s
SN.node[44].Communication.Routing.expiry = 300s
SN.node[36].Communication.Routing.expiry = 300s
SN.node[22].Communication.Routing.expiry = 300s
SN.node[3].Communication.Routing.expiry = 300s
SN.node[23].Communication.Routing.expiry = 300s
SN.node[10].Communication.Routing.expiry = 300s
SN.node[9].Communication.Routing.expiry = 300s
SN.node[6].Communication.Routing.expiry = 300s
SN.node[27].Communication.Routing.expiry = 300s
SN.node[43].Communication.Routing.expiry = 300s
SN.node[47].Communication.Routing.expiry = 300s
SN.node[25].Communication.Routing.expiry = 300s
SN.node[20].Communication.Routing.expiry = 300s
SN.node[5].Communication.Routing.expiry = 300s
SN.node[18].Communication.Routing.expiry = 300s
SN.node[38].Communication.Routing.expiry = 300s
SN.node[29].Communication.Routing.expiry = 300s
SN.node[30].Communication.Routing.expiry = 300s
SN.node[26].Communication.Routing.expiry = 300s
SN.node[31].Communication.Routing.expiry = 300s
SN.node[17].Communication.Routing.expiry = 300s
SN.node[11].Communication.Routing.expiry = 300s
SN.node[19].Communication.Routing.expiry = 300s
SN.node[33].Communication.Routing.expiry = 300s

output-scalar-file = ${resultdir}/TSTPEFFORT-${runnumber}.sca
output-vector-file = ${resultdir}/TSTPEFFORT-${runnumber}.vec

[Config TSTPEXPIRY]
SN.node[*].Communication.RoutingProtocolName = "TSTP"
SN.node[*].Communication.MACProtocolName = "TSTPMAC"
SN.node[*].Communication.Routing.useExpiryMetric = true
SN.node[*].Communication.MAC.dutyCycle = ${0.01, 0.05, 0.2, 0.5}
SN.node[0].Communication.Routing.sink = true
SN.node[*].Application.ptpPeriod = 0
SN.node[*].Application.hecopsPeriod = 0
SN.node[*].Application.ptpMaster = false

SN.node[42].Communication.Routing.expiry = 1s
SN.node[34].Communication.Routing.expiry = 1s
SN.node[8].Communication.Routing.expiry = 1s
SN.node[14].Communication.Routing.expiry = 1s
SN.node[35].Communication.Routing.expiry = 10s
SN.node[28].Communication.Routing.expiry = 10s
SN.node[48].Communication.Routing.expiry = 10s
SN.node[4].Communication.Routing.expiry = 10s
SN.node[12].Communication.Routing.expiry = 10s
SN.node[32].Communication.Routing.expiry = 10s
SN.node[24].Communication.Routing.expiry = 10s
SN.node[1].Communication.Routing.expiry = 10s
SN.node[40].Communication.Routing.expiry = 10s
SN.node[46].Communication.Routing.expiry = 60s
SN.node[21].Communication.Routing.expiry = 60s
SN.node[16].Communication.Routing.expiry = 60s
SN.node[41].Communication.Routing.expiry = 60s
SN.node[37].Communication.Routing.expiry = 60s
SN.node[15].Communication.Routing.expiry = 60s
SN.node[2].Communication.Routing.expiry = 60s
SN.node[39].Communication.Routing.expiry = 60s
SN.node[13].Communication.Routing.expiry = 60s
SN.node[7].Communication.Routing.expiry = 300s
SN.node[45].Communication.Routing.expiry = 300s
SN.node[44].Communication.Routing.expiry = 300s
SN.node[36].Communication.Routing.expiry = 300s
SN.node[22].Communication.Routing.expiry = 300s
SN.node[3].Communication.Routing.expiry = 300s
SN.node[23].Communication.Routing.expiry = 300s
SN.node[10].Communication.Routing.expiry = 300s
SN.node[9].Communication.Routing.expiry = 300s
SN.node[6].Communication.Routing.expiry = 300s
SN.node[27].Communication.Routing.expiry = 300s
SN.node[43].Communication.Routing.expiry = 300s
SN.node[47].Communication.Routing.expiry = 300s
SN.node[25].Communication.Routing.expiry = 300s
SN.node[20].Communication.Routing.expiry = 300s
SN.node[5].Communication.Routing.expiry = 300s
SN.node[18].Communication.Routing.expiry = 300s
SN.node[38].Communication.Routing.expiry = 300s
SN.node[29].Communication.Routing.expiry = 300s
SN.node[30].Communication.Routing.expiry = 300s
SN.node[26].Communication.Routing.expiry = 300s
SN.node[31].Communication.Routing.expiry = 300s
SN.node[17].Communication.Routing.expiry = 300s
SN.node[11].Communication.Routing.expiry = 300s
SN.node[19].Communication.Routing.expiry = 300s
SN.node[33].Communication.Routing.expiry = 300s

output-scalar-file = ${resultdir}/TSTPEXPIRY-${runnumber}.sca
output-vector-file = ${resultdir}/TSTPEXPIRY-${runnumber}.vec

[Config BypassRouting]

SN.node[*].Communication.RoutingProtocolName = "BypassRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048

output-scalar-file = ${resultdir}/BypassRouting-${runnumber}.sca
output-vector-file = ${resultdir}/BypassRouting-${runnumber}.vec

[Config AODV]

SN.node[*].Communication.RoutingProtocolName = "AodvRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[*].Communication.Routing.rreqRatelimit = 1
SN.node[*].Communication.Routing.rerrRatelimit = 1
#SN.node[*].Communication.Routing.activeRouteTimeout = 1000000000

output-scalar-file = ${resultdir}/AODV-${runnumber}.sca
output-vector-file = ${resultdir}/AODV-${runnumber}.vec

[Config AODVT]

SN.node[*].Communication.RoutingProtocolName = "AodvTestRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[*].Communication.Routing.rreqRatelimit = 1
SN.node[*].Communication.Routing.rerrRatelimit = 1
#SN.node[*].Communication.Routing.activeRouteTimeout = 1000000000

output-scalar-file = ${resultdir}/AODVT-${runnumber}.sca
output-vector-file = ${resultdir}/AODVT-${runnumber}.vec


[Config LEACH]

SN.node[*].Communication.RoutingProtocolName = "LeachRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[0].Communication.Routing.isSink = true
SN.node[*].Communication.Routing.slotLength = 0.2
SN.node[*].Communication.Routing.roundLength = 20s
SN.node[*].Communication.Routing.percentage = 0.05
SN.node[*].Communication.Routing.powersConfig = xmldoc("powersConfig.xml")

#SN.node[*].Communication.MACProtocolName = "TunableMAC"
#SN.node[*].Communication.MAC.dutyCycle = 1
#SN.node[*].Communication.MAC.randomTxOffset = 0
#SN.node[*].Communication.MAC.backoffType = 2

output-scalar-file = ${resultdir}/LEACH-${runnumber}.sca
output-vector-file = ${resultdir}/LEACH-${runnumber}.vec


[Config LABILE]

SN.node[*].Communication.RoutingProtocolName = "LabileRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[*].Communication.Routing.hopCountThreshould = 50
SN.node[*].Communication.Routing.rreqRatelimit = 1
SN.node[*].Communication.Routing.rerrRatelimit = 1
output-scalar-file = ${resultdir}/LABILE-${runnumber}.sca
output-vector-file = ${resultdir}/LABILE-${runnumber}.vec


[Config REL]

SN.node[*].Communication.RoutingProtocolName = "RELRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[*].Communication.Routing.hopCountThreshould = 50
SN.node[*].Communication.Routing.rreqRatelimit = 1
SN.node[*].Communication.Routing.rerrRatelimit = 1
output-scalar-file = ${resultdir}/REL-${runnumber}.sca
output-vector-file = ${resultdir}/REL-${runnumber}.vec
